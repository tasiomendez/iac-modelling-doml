/**
 * Resource Model Definition
 *
 * Author: Tasio Mendez (Politecnico di Milano)
 * URL: https://github.com/tasiomendez/
 * Version: 1.0
 */

grammar org.piacere.dsl.RMDF with org.eclipse.xtext.common.Terminals

generate rMDF "http://www.piacere.org/dsl/RMDF"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

RMDFModel:
	(elements += AbstractElement)*
;

AbstractElement:
	('metadata:' 
		BEGIN
			metadata=CMetadata
		END
	) &
	('data_types:'
		BEGIN 
			datatypes=CDataTypes
		END
	)? & 
	('node_types:' 
		BEGIN
			nodetypes=CNodeTypes
		END
	)
;

CMetadata:
	('_provider:' provider=ID) &
	('_version:' version=CSTRING)? &
	('_description:' description=CSTRING)?
;
		
CDataTypes:
	(datatypes+=CDataType)+
;

CDataType:
	name=CQualifiedName ':' 
	BEGIN
		data=CDataTypeData
	END
;

CDataTypeData:
	('description:' description=CSTRING)? &
	('properties:' 
		BEGIN
			properties+=CProperty+
		END
	)
;

CNodeTypes:
	(nodetypes+=CNodeType)+
;

CNodeType:
	name=CQualifiedName ':'
	BEGIN 
		data=CNodeTypeData
	END
;

CNodeTypeData:
	('description:' description=CSTRING) &
	('properties:'
		BEGIN 
			(properties+=CProperty)+
		END
	)?
;

CProperty:
	(name=ID ':'
		BEGIN 
			property=CPropertyBody
		END
	)
;

CPropertyBody:
	('type:' type=CValueData) &
	('default:' default=CValueExpression)? &
	('description:' description=CSTRING)? &
	('required:' required=CBOOLEAN)? & 
	('multiple:' multiple=CBOOLEAN)?
;

CQualifiedName:
	ID ('.' ID)*
;

QualifiedNameWithWildcard:
	CQualifiedName '.*'?
;

CValueData:
	predefined=CValueDataPredefined | datatype=[CDataType|CQualifiedName]
;

CValueDataPredefined:
	'String' | 'Integer' | 'Boolean'
;

CValueExpression:
	CSTRING | CFLOAT | CBOOLEAN | CSIGNEDINT
;

CSTRING:
	value = STRING
;

CFLOAT: 
	value = FLOAT	
;

CBOOLEAN: 
	value = BOOLEAN
;

CSIGNEDINT:
	value = SIGNEDINT
;

terminal BOOLEAN returns ecore::EBoolean:
	'true' | 'false';
	
SIGNEDINT returns ecore::EInt: '-'? INT;

FLOAT returns ecore::EFloat: INT ('.' INT)?;

// Block with indentation
terminal BEGIN: 'synthetic:BEGIN';
terminal END: 'synthetic:END';

